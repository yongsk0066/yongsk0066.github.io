---
interface Props {
  src: string;
  showCaption?: boolean;
}

const { src, showCaption } = Astro.props;
---

<div class="instagram-container">
  <blockquote
    class="instagram-media"
    data-instgrm-permalink={src}
    data-instgrm-version="14"
    style=" background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px auto; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);"
  >
    <div style="padding:16px;">
      <a
        href={src}
        style=" background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;"
        target="_blank"
      >
      </a>
      <script async src="//www.instagram.com/embed.js"></script>
    </div>

    <script>
      const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
          if (mutation.type === "childList") {
            const instagramIframe =
              document.querySelector<HTMLIFrameElement>(".instagram-media");
            if (instagramIframe) {
              instagramIframe.style.maxWidth = "unset";
            }
          }
        });
      });

      const instagramContainer = document.querySelector(".instagram-container");
      instagramContainer &&
        observer.observe(instagramContainer, { childList: true });
    </script>
    <style>
      .instagram-container {
        display: flex;
        justify-content: center;
      }
    </style>
  </blockquote>
</div>
